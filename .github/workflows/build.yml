name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'x86_64-apple-darwin,aarch64-apple-darwin' || 'x86_64-pc-windows-msvc' }}

      - name: Install dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install ffmpeg

      - name: Install dependencies (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install ffmpeg -y

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pyinstaller

      - name: Build backend distribution
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            powershell -ExecutionPolicy Bypass -File scripts/build_backend.ps1
          else
            bash scripts/build_backend.sh
          fi

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Copy logo to dist
        shell: bash
        run: cp echo_logo.svg frontend/dist/

      - name: Install Tauri dependencies
        working-directory: tauri
        run: npm install

      - name: Build Tauri app
        working-directory: tauri
        run: npm run build

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: echosmith-macos
          path: tauri/src-tauri/target/release/bundle/dmg/*.dmg

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: echosmith-windows
          path: |
            tauri/src-tauri/target/release/bundle/msi/*.msi
            tauri/src-tauri/target/release/bundle/nsis/*.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            echosmith-macos/*
            echosmith-windows/*
          draft: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
